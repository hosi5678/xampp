・membersに備考欄が必要
・ajax phpに操作ログが必要
・tableのレコードは色を反転させる。
・delete時に確認させる。
-> done.

・clock x

/js
要素の取得は番号ではなく、名前で行う。
insertとupdateは別ファイルになる。でないと、空欄がベルトコンベアに流れていく。
form nameは別にしないと、機能しない。
ページ遷移すると配列は渡せない。
備考の取得:
tableからなら、tdsから取得
formからなら、document.form_name.textarea_name.valueから取得
備考の設定:
textarea.valueにて設定
テーブルレコードの作成
thはlabel(table_name_join)から、tdはcol(table_name)からとりだす。
ajaxの処理ボタンはbuttonではなくaで行う。
insertとupdateに切り分け
->引数の渡しは共通化できない。
定型的な処理は引数、クリックイベントはevent引数で行う。->textareaのvalueはform 形成後、document.getElementByIdで取れる。
やはりloadとclickは違うのか？
・5/27現在で、update_formとinput_formの融合は難しい。loadとeventの引数渡しが違う。
'use strict'としたら、きちんと変数にvarをつける。

  $.when(    
    ajax_get_col(table_name+'_join'),
    ajax_get_col(table_name),
    ajax_select_from_table(table_name+'_join')

  ).done(function(label,col,row){
    
  });



// 祝日
    // var holidays = JapaneseHolidays.getHolidaysOf(curr.getFullYear());

    //     holidays.forEach(function(holiday) {
    //       if(holiday.month==(curr.getMonth()+1)){
    //         console.log(
    //           curr.getFullYear()+'/'+
    //           holiday.month+'/'+
    //           holiday.date+'/'+
    //           holiday.name
    //         );          
    //       }
    //     });


/php
php ajaxにて
・echo は2回しない。
・insert,updateした後は必ずselectする。
・select * from table_name like column_name like "%value%";
  は別ファイルで行う。

/jquery
 var tds=$(this).closest('tr').children();
 で列のtdを取得する。
 個別の値はtds.length,tds[i].innerTextで取得できる。

 /mysql
・ .sqlでcolとlabel(join)の順番は一致させる。
ルートのpw変更:
 ALTER USER 'root'@'localhost' IDENTIFIED BY "your password";
上記の2つ目のコマンドのPasswordの部分は自分の新しく設定するパスワードに変える。

データのバックアップ
mysqldump
mysqldump -u root -p orinasu_db>orinasu_db_backup.sql
とする。

mysqldump --single-transaction -u root -p orinasu_db>orinasu_db_dump_2020_05_19.sql
もある。

dumpからの復元
\. sqlをdrag&dropでよい。

